#BlueJ class context
comment0.params=theDollars\ theCents
comment0.target=Money(int,\ int)
comment0.text=\r\n\ Constructor\:\ initializes\ all\ attributes\ (i.e.\ totalCents)\r\n\ based\ on\ the\ given\ dollars\ and\ cents.\r\n\r\n\ @param\ theDollars\ the\ number\ of\ dollars\r\n\ @param\ theCents\ \ \ the\ number\ of\ cents\r\n
comment1.params=theCents
comment1.target=Money(long)
comment1.text=\r\n\ Constructor\:\ initializes\ all\ attributes\ (i.e.\ totalCents)\r\n\ based\ on\ the\ given\ total\ cents.\r\n\r\n\ @param\ theCents\ \ the\ total\ number\ of\ cents\r\n
comment2.params=
comment2.target=int\ getDollars()
comment2.text=\r\n\ getDollars\:\ Returns\ the\ number\ of\ dollars,\ which\ is\ this.totalCents\ /\ 100.\r\n\r\n\ @return\ the\ number\ of\ dollars\r\n
comment3.params=
comment3.target=int\ getCents()
comment3.text=\r\n\ getCents\:\ Returns\ the\ number\ of\ cents,\ which\ is\ this.totalCents\ %\ 100.\r\n\r\n\ @return\ the\ number\ of\ cents\ (between\ 0\ and\ 99,\ inclusive)\r\n
comment4.params=theMoney
comment4.target=Money\ add(Money)
comment4.text=\r\n\ add\:\ adds\ two\ money\ values\r\n\ \r\n\ Precondition\:\ two\ Money\ amounts\ are\ created\ and\ valid\r\n\ Postcondition\:\ the\ amount\ in\ this\ Money\ object\ is\ added\ to\ the\ Money\ amount\ given\ as\ parameter;\ the\ result\ is\ returned.\r\n\ Neither\ the\ calling\ object\ nor\ the\ parameter\ are\ changed.\r\n\ \r\n\ @param\ a\ Money,\ the\ Money\ amount\ to\ add\ to\ the\ calling\ object\ (this)\r\n\ @return\ Money,\ the\ sum\r\n
comment5.params=theMoney
comment5.target=Money\ subtract(Money)
comment5.text=\r\n\ subtract\:\ subtracts\ two\ money\ values\r\n\ \r\n\ Precondition\:\ two\ Money\ amounts\ are\ created\ and\ valid\r\n\ Postcondition\:\ the\ amount\ in\ this\ Money\ object\ is\ subtracted\ by\ the\ Money\ amount\ given\ as\ parameter;\ the\ result\ is\ returned.\r\n\ Neither\ the\ calling\ object\ nor\ the\ parameter\ are\ changed.\r\n\ \r\n\ @param\ a\ Money,\ the\ Money\ amount\ to\ subtract\ from\ the\ calling\ object\ (this)\r\n\ @return\ Money,\ the\ difference\r\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\r\n\ toString\:\ return\ String\ representation\ of\ this\ Money\ object\r\n\ Ex.\ "$5.04",\ "$0.60"\r\n\ Precondition\:\ this\ Money\ object\ is\ valid\r\n\r\n\ @return\ a\ String\ representation\ of\ this\ object\r\n
comment7.params=other
comment7.target=boolean\ equals(Money)
comment7.text=\r\n\ equals\:\ compare\ the\ status\ of\ two\ money\ objects.\r\n\ \r\n\ @param\ other\ \ a\ Money\ object\r\n\ @return\ true\ if\ calling\ object\ (this)\ is\ in\ the\ same\ state\ as\ the\ Money\ object\ received\ as\ a\ parameter,\ and\ false\ otherwise.\r\n
comment8.params=other
comment8.target=int\ compareTo(Money)
comment8.text=\r\n\ compareTo\:\ Compares\ the\ values\ of\ this\ Money\ object\ and\ the\ parameter\ Money\ object.\r\n\ \r\n\ @param\ other\ a\ Money\ object\r\n\ @return\ 0\ if\ both\ Money\ values\ are\ the\ same\r\n\ \ \ \ \ \ \ \ \ -1\ if\ the\ parameter\ Money\ values\ is\ greater\ than\ this\ Money\ value\r\n\ \ \ \ \ \ \ \ \ 1\ if\ the\ parameter\ Money\ value\ is\ less\ than\ this\ Money\ value\r\n
numComments=9
